#BlueJ class context
comment0.target=Fabrica
comment0.text=\r\n\ Clase\ Fabrica.\ Clase\ principal\ del\ programa,\ conteniendo\ el\ m\u00E9todo\ main\r\n\ \r\n\ @author\ Luis\ Miguel\ Barquillo\ Romero\r\n\ @since\ 19/02/2020\r\n\ @version\ 1.0.0\r\n
comment1.params=
comment1.target=Fabrica()
comment1.text=\r\n\ Constructor.\ Inicializa\ nuestras\ propiedades.\r\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\r\n\ El\ main\ del\ programa.\ Aqu\u00ED\ empieza\ todo\r\n\ @param\ args\r\n
comment3.params=
comment3.target=void\ principal()
comment3.text=\r\n\ M\u00E9todo\ principal.\ Es\ llamdo\ desde\ main\ para\ comenzar\ la\ ejecuci\u00F3n\ del\ programa.\r\n\ Esta\ t\u00E9cnica\ nos\ permite\ usar\ m\u00E9todos\ y\ propiedades\ de\ la\ propia\ clase\ sin\ necesidad\ de\ ponerlos\ static.\r\n
comment4.params=
comment4.target=interfaz.EntradaSalida\ getEs()
comment4.text=GETTER\ Y\ SETTERS
comment5.params=
comment5.target=GestionMuebles\ getGestionMuebles()
comment6.params=
comment6.target=GestionPersonas\ getGestionPersonas()
comment7.params=
comment7.target=repositorio.BBDDMuebles\ getBbddMuebles()
comment8.params=
comment8.target=repositorio.BBDDPersonas\ getBbddPersonas()
comment9.params=
comment9.target=void\ insertarDatosMockup()
comment9.text=\r\n\ M\u00E9todo\ para\ la\ inserci\u00F3n\ de\ datos\ de\ prueba\ para\ testear\ la\ aplicaci\u00F3n\r\n
numComments=10
